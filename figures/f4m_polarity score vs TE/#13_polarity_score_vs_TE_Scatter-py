import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import os

# 파일 경로 설정
base_path = "/Users/kyungkim/Documents/riboseq_2025/riboseq_analysis/polarity_TE"
g2_vs_g1_down_path = os.path.join(base_path, "G2vsG1_Down_polarity.csv")
g3_vs_g2_up_path = os.path.join(base_path, "G3vsG2_Up_polarity.csv")
g2_vs_g1_up_path = os.path.join(base_path, "G2vsG1_Up_polarity.csv")
g3_vs_g2_down_path = os.path.join(base_path, "G3vsG2_Down_polarity.csv")

# CSV 파일 불러오기
g2_vs_g1_down = pd.read_csv(g2_vs_g1_down_path)
g3_vs_g2_up = pd.read_csv(g3_vs_g2_up_path)
g2_vs_g1_up = pd.read_csv(g2_vs_g1_up_path)
g3_vs_g2_down = pd.read_csv(g3_vs_g2_down_path)

# 공통 유전자 찾기
common_genes_f1 = set(g2_vs_g1_down['gene_id']).intersection(set(g3_vs_g2_up['gene_id']))
common_genes_f2 = set(g2_vs_g1_up['gene_id']).intersection(set(g3_vs_g2_down['gene_id']))

# 그룹에 색상 추가
def add_color_group(df, common_genes, group):
    df['Color'] = df['gene_id'].apply(lambda x: 'yellow' if x in common_genes else group)
    return df

# 그룹별 색상 추가
g2_vs_g1_down_colored = add_color_group(g2_vs_g1_down, common_genes_f1, 'blue')
g3_vs_g2_up_colored = add_color_group(g3_vs_g2_up, common_genes_f1, 'red')
g2_vs_g1_up_colored = add_color_group(g2_vs_g1_up, common_genes_f2, 'red')
g3_vs_g2_down_colored = add_color_group(g3_vs_g2_down, common_genes_f2, 'blue')

# 데이터를 하나로 결합
figure1_data = pd.concat([g2_vs_g1_down_colored, g3_vs_g2_up_colored])
figure2_data = pd.concat([g2_vs_g1_up_colored, g3_vs_g2_down_colored])

# 색상 설정
color_palette = {'yellow': '#FFD700', 'blue': '#0000FF', 'red': '#FF0000'}

# 1. G2vsG1 Down & G3vsG2 Up
output_csv_figure1 = os.path.join(base_path, "G2vsG1_Down_G3vsG2_Up_polarity_vs_te_data.csv")
figure1_data.to_csv(output_csv_figure1, index=False)

# 산점도 그리기
plt.figure(figsize=(8, 6))
sns.scatterplot(
    data=figure1_data,
    x='Δpolarity', y='log2FoldChange',
    hue='Color', palette=color_palette,
    edgecolor='black', linewidth=1.2, alpha=0.7
)
plt.axhline(0, color='gray', linestyle='--', alpha=0.5)
plt.axvline(0, color='gray', linestyle='--', alpha=0.5)
plt.title('ΔPolarity vs. TE Fold Change (G2vsG1 Down & G3vsG2 Up)')
plt.xlabel('ΔPolarity')
plt.ylabel('TE Fold Change (log2)')
plt.legend(title="Group", loc="upper right", labels=["Common Genes (Yellow)", "G2vsG1 Down (Blue)", "G3vsG2 Up (Red)"])
plt.grid(True)

# 그림 저장
output_file_figure1 = os.path.join(base_path, "G2vsG1_Down_G3vsG2_Up_polarity_vs_te_scatter_plot.png")
plt.savefig(output_file_figure1, dpi=600)
plt.show()
print(f"그림 저장 완료: {output_file_figure1}")
print(f"CSV 저장 완료: {output_csv_figure1}")

# 2. G2vsG1 Up & G3vsG2 Down
output_csv_figure2 = os.path.join(base_path, "G2vsG1_Up_G3vsG2_Down_polarity_vs_te_data.csv")
figure2_data.to_csv(output_csv_figure2, index=False)

# 산점도 그리기
plt.figure(figsize=(8, 6))
sns.scatterplot(
    data=figure2_data,
    x='Δpolarity', y='log2FoldChange',
    hue='Color', palette=color_palette,
    edgecolor='black', linewidth=1.2, alpha=0.7
)
plt.axhline(0, color='gray', linestyle='--', alpha=0.5)
plt.axvline(0, color='gray', linestyle='--', alpha=0.5)
plt.title('ΔPolarity vs. TE Fold Change (G2vsG1 Up & G3vsG2 Down)')
plt.xlabel('ΔPolarity')
plt.ylabel('TE Fold Change (log2)')
plt.legend(title="Group", loc="upper right", labels=["Common Genes (Yellow)", "G2vsG1 Up (Red)", "G3vsG2 Down (Blue)"])
plt.grid(True)

# 그림 저장
output_file_figure2 = os.path.join(base_path, "G2vsG1_Up_G3vsG2_Down_polarity_vs_te_scatter_plot.png")
plt.savefig(output_file_figure2, dpi=600)
plt.show()
print(f"그림 저장 완료: {output_file_figure2}")
print(f"CSV 저장 완료: {output_csv_figure2}")
